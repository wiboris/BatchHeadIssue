// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Compute.Batch;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Compute.Batch.Samples
{
    public partial class Samples_BatchClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PoolExists_ShortVersion()
        {
            BatchClient client = new BatchClient();

            Response response = client.PoolExists("<poolId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PoolExists_ShortVersion_Async()
        {
            BatchClient client = new BatchClient();

            Response response = await client.PoolExistsAsync("<poolId>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PoolExists_AllParameters()
        {
            BatchClient client = new BatchClient();

            Response response = client.PoolExists("<poolId>", timeOut: 1234, ocpDate: DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PoolExists_AllParameters_Async()
        {
            BatchClient client = new BatchClient();

            Response response = await client.PoolExistsAsync("<poolId>", timeOut: 1234, ocpDate: DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));

            Console.WriteLine(response.Status);
        }
    }
}
